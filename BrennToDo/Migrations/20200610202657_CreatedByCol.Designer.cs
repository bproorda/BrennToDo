// <auto-generated />
using System;
using BrennToDo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BrennToDo.Migrations
{
    [DbContext(typeof(ToDoDbContext))]
    [Migration("20200610202657_CreatedByCol")]
    partial class CreatedByCol
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BrennToDo.Models.ToDo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assignee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ToDo");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Assignee = "Brenn",
                            Difficulty = 3,
                            DueDate = new DateTime(2020, 7, 10, 5, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Walk The Dog"
                        },
                        new
                        {
                            Id = 2L,
                            Assignee = "Graeme",
                            CreatedByUserId = "7304a689-e2ff-4b12-a49c-103675becb39",
                            Difficulty = 5,
                            DueDate = new DateTime(2020, 7, 10, 5, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Clean up after Dog"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
